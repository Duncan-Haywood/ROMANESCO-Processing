
Romanesco Unu 
Release 1.2.0.29
--
Guide to code the object




ID group
=====================
int ID_group = # ;
use '1'

ID item
=======
int ID_item = #
> this ID must be unique

INFO item
=====================
RPE_name = "Unknown" ;
RPE_author = "Anonymous";
RPE_ersion = "Alpha";
RPE_pack = "Base 2016" ; 

romanescoVideo = "NO" or "YES" ; elp the controller to manage the computer camera

RPE_mode = "mode name/mode name" ; separate the name by a slash and write the next mode immadialtly after this one.

RPE_slider = "all" 

or choice in the list bellow, the case is very important, no "space" after or before the word. The word must be separate by a comma

"Fill hue,Fill sat,Fill bright,Fill alpha,
Stroke hue,Stroke sat,Stroke bright,Stroke alpha,
Thickness,
Size X,Size Y,Size Z,
Font size,
Canvas X,Canvas Y,Canvas Z,
Reactivity,
Speed X,Speed Y,Speed Z,
Spurt X,Spurt Y,Spurt Z,
Direction X,Direction Y,Direction Z,
Jitter X,Jitter Y,Jitter Z,
Swing X,Swing Y,Swing Z,
Quantity,Variety,
Life,Flow,Quality,
Area,Angle,Scope,Scan,
Alignment,Repulsion,Attraction,Charge – +,
Influence,Calm,Need"







________________
VOID
°°°°°°°°°°°°°°°°
 there is TWO MAINS VOID in class ROMANESCO
 void setting()
 and 
 void display()
 if you use other void you must call this one in one of them



_____________________________
LIBRARY OR EXTERNAL CLASSES
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
when you code in the class romanesco and call external class or library need (this) you must write (callingClass) :
example 
* name = new LibraryOrClass(this);) >>>
>>> become >>>
<<< name = new LibraryOrClass(callingClass);)




_________
RENDERING
°°°°°°°°°
boolean fullRendering ;
You can use this boolean to limit your object on the Prescene. It's usefull with object use a lot of particuls.
yhis boolean is false on the Prescene and true on the Scene.























RPE METHODE for item
-----------------------------

void aspect_rpe(int ID) 
> change the fill, stroke and strokeWeight og your item, the reason why you need send the ID arg














CAMERA
---------------------
You can call the video capture directly, you don't need to write code about the librairy.
you can use directly the Capture methode of the processing.video.*

In the description of the object write 
romanescoVideo = "YES" ;

PVector CAM_SIZE ; @return the width and the height of the current video capture
boolean CAMERA_AVAILABLE ; #return the statement of the device camera

String[] cam_name ; @return the name of all the camera available
PVector[] cam_size ; @return the size of all the camera available
int[] cam_fps ; @return the fps of all the camera available
int which_cam ; @return the ID of the current camera





















______________________
IMPORT
°°°°°°°°°°°°°°°°°°°°°°
IMAGE IMPORT
–––––––––––––––––––––––
load image from the menu controller:
img_bitmap[ID_item] = loadImage(imagePath[whichImage[ID_item]]) ;

details:
loadImg(ID_item) void use to load and update the image
String imagePath[whichImage] ; image jpg from the dropdown menu
PImage img[ID_item] image selected from dropdown menu and confirm by the Parameter button of the object


TEXT IMPORT
–––––––––––––––––––––––
loadText(ID_item) use to load and update the text

String textImport[ID_item] raw text selected from the folder preferences/Karaoke

textPath[whichText] ; text from the dropdown menu

int numChapters(String textImport[ID_item]) give the number of the chapter of your raw text

int numMaxSentencesByChapter(String textImport[ID_item]) give the number of sentences of the chapter have the most sentences

String whichSentence(String txt, int whichChapter, int whichSentence) return String

Romanesco call fileText.txt from the folder Karaoke from the preferences folder,
so you can write on it when you use Romanesco split function
"*" to separate the chapter 
"/" to separate the sentence

** When you code take a care to save the karaoke.txt in each folder of dev (Scene, Prescene, Mirroir) **








_____________________________
MISC
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

STARTING POSITION
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
give the position of the object at the opening app
PVector startingPosition[ID_item] by default this value is equal to (width/2, height/2, 0)

to change that use this void 
void startPosition(int ID_item, int x, int y, int z) use it IN THE void display()
 give the x,y,z data to PVector  startingPos[ID_item]




RESET OBJECT : empty the object list
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
To empty the list or reset object activate by backspace and delete
boolean resetAction(ID_item) when the Action button is On

boolean resetParameter(ID_item) when the Parameter button is On
Suggestion use Action Button for the particle and the list
and Parameter for the other reset. But it's just a suggestion




CAMERA
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
travelling(PVector targetPos) ; // the camera go to a specific point in the scene


OBJECT
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
boolean setting[ID_item] to block the setting at the beggining and when you come back to the button setting to don't go immediatly on the value slider...not finish in progress


MOTION
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
boolean motion[ID_item] boolean use for the move activate or desactivate by the "m" key - booleann mTouch - 


ALIGNEMENT
––––––––––––––––––––––––––––––––––––––––––––––––––––––––
boolean horizon[ID_item] boolean use for the move activate or desactivate by the "h" key - booleann hTouch -


REVERSE DIRECTION
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––
boolean reverse[ID_item] use to reverse direction or what you want, activa by "r" key - boolean rTouch -













DISPLAY INFO on SCENE
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––
boolean objectInfoDisplay[ID_item] use to display info or what you want show on Prescene or Scene from your object, activate by "i" key - boolean iTouch

String objectName[ID_item] return the name of your object

String objectInfo[ID_item]  can be use to add info who can be display in the info option when you push "i" on the prescene

int objectID[ID_item] return the ID of the object









COMMON ASSOCIATION 
–––––––––––––––––––––––––––––––––––––––––––––––––––––––––
between the controler and the prescene
// with action button
// add obj
if(actionButton[ID_item] == 1 && nTouch ) { /* yourList.add( new YourClass ()); */ }
or
int spawnFrequency = 3 ; 
if(actionButton[ID_item] == 1 && nLongTouch && frameCount % spawnFrequency == 0 ) { /* yourList.add( new YourClass ()); */ }
// motion
if(actionButton[ID_item] == 1 && mTouch ) { }
// change stuff like color palette....
if(actionButton[ID_item] == 1 && xTouch ) { }
// stop, move the mouse inside the object
if(actionButton[ID_item] == 1 && spaceTouch ) { }

//with parametter button
open folder
if ( parameterButton[ID_item] == 1 && oTouch ) { }